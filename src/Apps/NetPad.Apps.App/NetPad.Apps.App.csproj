<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>$(DefaultTargetFramework)</TargetFramework>
        <RootNamespace>NetPad</RootNamespace>
        <AssemblyVersion>0.9.1</AssemblyVersion>
        <FileVersion>0.9.1</FileVersion>
        <InformationalVersion>0.9.1</InformationalVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>App\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="10.0.1"/>
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.1"/>
        <PackageReference Include="NSwag.AspNetCore" Version="14.4.0"/>
        <PackageReference Include="NSwag.CodeGeneration.TypeScript" Version="14.4.0"/>
        <PackageReference Include="Serilog.AspNetCore" Version="6.0.0"/>
        <PackageReference Include="Serilog.Enrichers.Process" Version="2.0.2"/>
        <PackageReference Include="Serilog.Sinks.Console" Version="4.0.1"/>
        <PackageReference Include="Serilog.Sinks.File" Version="5.0.0"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\Core\NetPad.Runtime\NetPad.Runtime.csproj"/>
        <ProjectReference Include="..\..\External\O2Html\O2Html.csproj"/>
        <ProjectReference Include="..\NetPad.Apps.Shells.Electron\NetPad.Apps.Shells.Electron.csproj"/>
        <ProjectReference Include="..\NetPad.Apps.Shells.Tauri\NetPad.Apps.Shells.Tauri.csproj"/>
        <ProjectReference Include="..\NetPad.Apps.Shells.Web\NetPad.Apps.Shells.Web.csproj"/>
        <ProjectReference Include="..\..\Plugins\NetPad.Plugins.OmniSharp\NetPad.Plugins.OmniSharp.csproj"/>
        <ProjectReference Include="..\NetPad.Apps.Common\NetPad.Apps.Common.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <Content Update="appsettings.Development.json">
            <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        </Content>
        <Content Update="appsettings.Local.json">
            <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        </Content>
        <Content Remove="$(SpaRoot)**"/>
        <None Remove="$(SpaRoot)**"/>
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
        <Compile Remove="App\dist\**"/>
        <Content Remove="App\dist\**"/>
        <EmbeddedResource Remove="App\dist\**"/>
        <None Remove="App\dist\**"/>
        <Content Include="electron.manifest.js">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="electron.manifest.dev.js">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        </Content>
        <Content Update="ElectronHostHook\**\*.*">
            <CopyToPublishDirectory>Never</CopyToPublishDirectory>
        </Content>
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" Condition=" '$(WebBuild)' != 'true' "/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build-web" Condition=" '$(WebBuild)' == 'true' "/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' "/>
        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**"/>
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'"/>
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

    <!-- When not publishing build and copy ScriptHost artifacts to subfolder -->
    <Target Name="BuildAndCopyScriptHostProject" AfterTargets="Build" Condition="'$(_IsPublishing)' == ''">
        <Message Text="[i] BuildAndCopyScriptHostProject" Importance="high"/>
        <MSBuild Projects="..\NetPad.Apps.ScriptHost\NetPad.Apps.ScriptHost.csproj"
                 Targets="Build"
                 Properties="Configuration=$(Configuration);Platform=$(Platform)"
                 BuildInParallel="true"/>

        <PropertyGroup>
            <ScriptHostBuildDir>$(ProjectDir)..\NetPad.Apps.ScriptHost\bin\$(Configuration)\$(EarliestSupportedTargetFramework)\</ScriptHostBuildDir>
            <CopyDestination>$(OutputPath)ScriptHost\</CopyDestination>
        </PropertyGroup>

        <Message Text="[i] BuildAndCopyScriptHostProject.ScriptHostBuildDir: $(ScriptHostBuildDir)" Importance="high"/>
        <Message Text="[i] BuildAndCopyScriptHostProject.CopyDestination:    $(CopyDestination)" Importance="high"/>

        <MakeDir Directories="$(CopyDestination)"/>

        <ItemGroup>
            <ScriptHostBuildOutput Include="$(ScriptHostBuildDir)**\*"/>
        </ItemGroup>

        <Copy SourceFiles="@(ScriptHostBuildOutput)"
              DestinationFolder="$(CopyDestination)%(RecursiveDir)"
              SkipUnchangedFiles="true"/>
    </Target>

    <!-- When publishing, also publish ScriptHost artifacts to subfolder -->
    <Target Name="PublishScriptHostProject" AfterTargets="Publish" Condition="'$(_IsPublishing)' != ''">
        <Message Text="[i] PublishScriptHostProject" Importance="high"/>
        <PropertyGroup>
            <ScriptHostPublishDir>$(PublishDir)ScriptHost</ScriptHostPublishDir>
        </PropertyGroup>

        <Message Text="[i] PublishScriptHostProject.ScriptHostPublishDir: $(ScriptHostPublishDir)" Importance="high"/>

        <MSBuild Projects="..\NetPad.Apps.ScriptHost\NetPad.Apps.ScriptHost.csproj"
                 Targets="Publish"
                 Properties="Configuration=$(Configuration);SelfContained=false;PublishDir=$(ScriptHostPublishDir)"
                 BuildInParallel="true"/>
    </Target>

</Project>
